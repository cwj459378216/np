# Production Environment Configuration
spring.application.name=web-service

# Database Configuration - Production
spring.datasource.url=jdbc:postgresql://localhost:5432/octopusx
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Swagger Configuration - Disabled for production
springdoc.api-docs.enabled=false
springdoc.swagger-ui.enabled=false

# Logging Configuration - Production level
logging.level.org.hibernate.SQL=WARN
logging.level.com.example.web_service=INFO
logging.level.org.springframework=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate=WARN
logging.level.org.postgresql=WARN

# Log file configuration
logging.file.name=/opt/np/logs/web-service.log
logging.logback.rollingpolicy.max-file-size=100MB
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.total-size-cap=1GB
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n

# Frontend URL Configuration
app.frontend.url=http://localhost

# Report storage path
app.report.storage.path=/opt/np/reports

# Third-party service - Production endpoint
third-party.base-url=http://localhost:8338/api

# Elasticsearch Configuration - Production
elasticsearch.host=localhost
elasticsearch.port=9200
elasticsearch.scheme=http

# AI Service Configuration - Production
ai.base-url=http://localhost:11434
ai.default-model=deepseek-r1:7b

# Suricata Configuration
suricata.customer.rules.path=${SURICATA_CUSTOMER_RULES_PATH:/opt/suricata/rules/customer.rules}

# File upload limits
spring.servlet.multipart.max-file-size=4GB
spring.servlet.multipart.max-request-size=4GB
server.tomcat.max-http-form-post-size=-1
server.tomcat.max-swallow-size=-1
server.tomcat.connection-timeout=30m
spring.servlet.multipart.file-size-threshold=0

# Production specific settings
spring.jpa.properties.hibernate.format_sql=false
spring.h2.console.enabled=false
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

# Production performance tuning
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=10
server.tomcat.accept-count=100
server.tomcat.max-connections=8192

# Security settings
server.error.include-stacktrace=never
server.error.include-message=never
server.error.include-binding-errors=never

# JPA optimization for production
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
